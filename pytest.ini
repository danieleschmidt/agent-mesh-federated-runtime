[pytest]
# Pytest configuration for Agent Mesh Federated Runtime

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*
testpaths = tests
minversion = 7.0

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src/agent_mesh
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=85
    --durations=10
    --junitxml=test-results.xml
    --maxfail=5
    --disable-warnings
    -p no:warnings

# Test markers
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test component interactions
    e2e: End-to-end tests that test complete user workflows
    performance: Performance and benchmark tests
    slow: Slow running tests (typically >5 seconds)
    fast: Fast running tests (typically <1 second)
    network: Tests that require network access
    gpu: Tests that require GPU acceleration
    docker: Tests that require Docker
    kubernetes: Tests that require Kubernetes
    byzantine: Tests for Byzantine fault tolerance
    consensus: Tests for consensus algorithms
    federated: Tests for federated learning functionality
    security: Security-related tests
    crypto: Cryptographic tests
    privacy: Privacy-preserving tests
    stress: Stress and load tests
    memory: Memory usage tests
    concurrent: Concurrency tests
    distributed: Distributed system tests
    mock: Tests using extensive mocking
    real: Tests using real network connections
    experimental: Experimental feature tests
    regression: Regression tests for known issues
    smoke: Basic smoke tests for quick validation

# Async test configuration
asyncio_mode = auto

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_auto_indent = true

# Filter warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore::pytest.PytestCollectionWarning
    ignore::pytest.PytestConfigWarning
    ignore:.*pkg_resources.*:DeprecationWarning
    ignore:.*imp module.*:DeprecationWarning

# Timeout configuration (requires pytest-timeout)
timeout = 300
timeout_method = thread

# Test collection configuration
collect_ignore = [
    "setup.py",
    "conftest.py",
    "build",
    "dist",
    ".tox",
    ".pytest_cache",
    "__pycache__",
    "*.egg-info",
    "venv",
    ".venv",
    "node_modules"
]

# xfail strict mode
xfail_strict = true

# Required plugins
required_plugins =
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    pytest-benchmark>=4.0.0
    pytest-xdist>=3.0.0
    pytest-timeout>=2.1.0