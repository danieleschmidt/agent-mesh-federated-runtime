# Pre-commit hooks for Agent Mesh Federated Runtime
# See https://pre-commit.com for more information

repos:
  # Python code formatting and linting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1024']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: debug-statements
      - id: name-tests-test
        args: ['--pytest-test-first']
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        args: ["--profile", "black", "--filter-files"]

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3
        args: ["--line-length=88"]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [
          "--max-line-length=88",
          "--extend-ignore=E203,W503",
          "--exclude=proto/*_pb2.py,proto/*_pb2_grpc.py"
        ]
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify
          - flake8-docstrings

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --show-error-codes]
        additional_dependencies:
          - types-PyYAML
          - types-requests
          - types-redis
          - types-setuptools

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-r", "src/", "-f", "json"]
        exclude: ^tests/

  # Python dependency security
  - repo: https://github.com/pyupio/safety
    rev: 2.3.5
    hooks:
      - id: safety
        args: ["--short-report"]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: ["--ignore", "DL3008", "--ignore", "DL3009"]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        args: ["--fix"]

  # Commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.5.2
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Remove unused imports
  - repo: https://github.com/pycqa/autoflake
    rev: v2.1.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --ignore-init-module-imports

  # Upgrade Python syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.8.0
    hooks:
      - id: pyupgrade
        args: [--py39-plus]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # Protocol Buffers linting
  - repo: https://github.com/bufbuild/buf
    rev: v1.21.0
    hooks:
      - id: buf-lint
        files: \.proto$
      - id: buf-format
        files: \.proto$

  # JSON formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0
    hooks:
      - id: prettier
        types_or: [json, yaml, markdown]
        exclude: ^(package-lock\.json|\.vscode/)

  # Terraform formatting (if using infrastructure as code)
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.81.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_docs
        args:
          - --hook-config=--path-to-file=README.md
          - --hook-config=--add-to-existing-file=true
          - --hook-config=--create-file-if-not-exist=true

  # Git hooks for consistency
  - repo: local
    hooks:
      # Custom test runner
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: false
        args: [tests/unit/, -v, --tb=short]
        stages: [push]

      # Custom security scan
      - id: custom-security-scan
        name: custom-security-scan
        entry: scripts/security-scan.sh
        language: script
        files: \.(py|yaml|yml|json)$
        stages: [push]

      # License header check
      - id: license-header
        name: license-header
        entry: scripts/check-license-header.py
        language: python
        files: \.py$
        exclude: ^(tests/|proto/.*_pb2\.py|proto/.*_pb2_grpc\.py)

      # Documentation check
      - id: docs-check
        name: docs-check
        entry: scripts/check-docs.py
        language: python
        files: \.py$
        pass_filenames: false
        stages: [push]

# Global configuration
default_language_version:
  python: python3.9

# CI settings
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [
    pytest-check,
    custom-security-scan,
    buf-lint,
    buf-format,
    terraform_fmt,
    terraform_validate,
    terraform_docs
  ]
  submodules: false