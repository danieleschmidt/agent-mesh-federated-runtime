apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: agent-mesh
  namespace: agent-mesh
  labels:
    app.kubernetes.io/name: agent-mesh
    app.kubernetes.io/component: mesh-node
spec:
  serviceName: agent-mesh
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: agent-mesh
      app.kubernetes.io/component: mesh-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agent-mesh
        app.kubernetes.io/component: mesh-node
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: agent-mesh
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: mesh-node
        image: ghcr.io/your-org/agent-mesh-federated-runtime:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: p2p
          containerPort: 4001
          protocol: TCP
        - name: grpc
          containerPort: 5001
          protocol: TCP
        - name: http-api
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: MESH_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MESH_ROLE
          value: "auto"
        - name: CONFIG_PATH
          value: "/etc/agent-mesh/config.yaml"
        - name: PYTHONPATH
          value: "/app/src"
        volumeMounts:
        - name: config
          mountPath: /etc/agent-mesh
          readOnly: true
        - name: data
          mountPath: /app/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: agent-mesh-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi