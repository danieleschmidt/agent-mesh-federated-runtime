[run]
# Coverage configuration for Agent Mesh Federated Runtime
source = src/agent_mesh
branch = True
parallel = True
concurrency = thread,multiprocessing

# Include patterns
include = 
    src/agent_mesh/*
    src/agent_mesh/**/*

# Exclude patterns
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */.*
    */venv/*
    */virtualenv/*
    */node_modules/*
    */build/*
    */dist/*
    */docs/*
    */scripts/*
    setup.py
    conftest.py
    *_pb2.py
    *_pb2_grpc.py

# Measurement options
disable_warnings = 
    module-not-imported
    no-data-collected

[report]
# Reporting configuration
show_missing = True
skip_covered = False
skip_empty = True
sort = Cover
precision = 2

# Exclude lines from coverage
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run:
    if 0:
    if False:
    if __name__ == .__main__.:
    
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod
    
    # Don't complain about type checking imports
    if TYPE_CHECKING:
    
    # Don't complain about platform specific code
    if sys.platform
    if platform.system
    
    # Don't complain about version specific code
    if sys.version_info
    
    # Don't complain about optional dependencies
    except ImportError:
    except ModuleNotFoundError:
    
    # Don't complain about logging
    logger\.debug
    logger\.info
    
    # Don't complain about pass statements
    pass

# Partial branch coverage
partial_branches =
    # Don't complain if a non-runnable conditional isn't run
    pragma: no branch
    
    # Don't complain about type checking
    if TYPE_CHECKING:

[html]
# HTML report configuration
directory = htmlcov
title = Agent Mesh Coverage Report
show_contexts = True

[xml]
# XML report configuration
output = coverage.xml

[json]
# JSON report configuration  
output = coverage.json
show_contexts = True

[paths]
# Path mapping for coverage combining
source = 
    src/agent_mesh
    /workspace/src/agent_mesh
    /app/src/agent_mesh